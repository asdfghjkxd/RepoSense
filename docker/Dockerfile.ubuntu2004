#!/usr/bin/docker
# ██████  ███████ ██████   ██████  ███████ ███████ ███    ██ ███████ ███████
# ██   ██ ██      ██   ██ ██    ██ ██      ██      ████   ██ ██      ██
# ██████  █████   ██████  ██    ██ ███████ █████   ██ ██  ██ ███████ █████
# ██   ██ ██      ██      ██    ██      ██ ██      ██  ██ ██      ██ ██
# ██   ██ ███████ ██       ██████  ███████ ███████ ██   ████ ███████ ███████
#
# Title:            Ubuntu LTS 20.04 Builds
# Author:           George Tay
# Version:          0.1
# License:          MIT (see main repository for Licensing information
#
# Dockerfile format inspired by https://github.com/sickcodes/Docker-OSX/blob/master/Dockerfile.naked
#
# These are some of the resources which I heavily referenced to create this Dockerfile:
# - Passing Arguments into Docker Containers
#     - https://stackoverflow.com/questions/40873165/use-docker-run-command-to-pass-arguments-to-cmd-in-dockerfile
# - Installation of Java on Ubuntu
#     - https://stackoverflow.com/questions/49914574/install-jdk-8-update-172-in-dockerfile-with-ubuntu-image
# - Installation of NodeJS via Node Version Manager (NVM)
#     - https://stackoverflow.com/questions/36399848/install-node-in-dockerfile

FROM asdfghjklxd/reposense-images:ubuntu-20-04 AS setup-env

LABEL os=ubuntu
LABEL "os.version"="20.04"
LABEL java="8, 11"
LABEL node="16.20.2"
LABEL maintainer="George Tay"

WORKDIR /RepoSense

# copy over all files
COPY . .

# allow gradlew to be executable
RUN chmod +x gradlew

# make the report directory
RUN mkdir reports

# test java 8
RUN export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 && \
    update-java-alternatives --set /usr/lib/jvm/java-1.8.0-openjdk-amd64;
RUN ./gradlew environmentalChecks
RUN ./gradlew lintFrontend
RUN ./gradlew clean
RUN ./gradlew test
RUN ./gradlew systemTest
RUN ./gradlew checkstyleAll
# RUN ./gradlew clean
# RUN ./gradlew frontendTest -Pci
RUN ./gradlew coverage
RUN cp -rf ./build/reports/jacoco/coverage reports/
RUN mv -f reports/coverage reports/java8

# test java 11
RUN export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64 && \
    update-java-alternatives --set /usr/lib/jvm/java-1.11.0-openjdk-amd64;
RUN ./gradlew clean
RUN ./gradlew environmentalChecks
RUN ./gradlew lintFrontend
RUN ./gradlew clean
RUN ./gradlew test
RUN ./gradlew systemTest
RUN ./gradlew checkstyleAll
# RUN ./gradlew clean
# RUN ./gradlew frontendTest -Pci
RUN ./gradlew coverage
RUN cp -rf ./build/reports/jacoco/coverage reports/
RUN mv -f reports/coverage reports/java11

# export reports
FROM scratch AS report-exporter
COPY --from=setup-env RepoSense/reports /reports
